name: CD Pipeline

on:
  repository_dispatch:
    types: [frontend-release, backend-release]

env:
  SSH_AUTH_SOCK: /tmp/ssh_agent.sock

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.x"
      - run: pip install ansible docker

      - name: Bump frontend version on event
        if: github.event.action == 'frontend-release'
        run: |
          curl -L \
          -X PATCH \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer ${{ secrets.PAT_VAR }}" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          https://api.github.com/repos/cuongnt02/portfolio/actions/variables/FRONTEND_VERSION \
          -d '{"name":"FRONTEND_VERSION","value":"${{ github.event.client_payload.version }}"}'

      - name: Bump backend version on event
        if: github.event.action == 'backend-release'
        run: |
          curl -L \
          -X PATCH \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer ${{ secrets.PAT_VAR }}" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          https://api.github.com/repos/cuongnt02/portfolio/actions/variables/BACKEND_VERSION \
          -d '{"name":"BACKEND_VERSION","value":"${{ github.event.client_payload.version }}"}'

      - name: Set current front end run id
        if: github.event.action == 'frontend-release'
        run: |
          curl -L \
          -X PATCH \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer ${{ secrets.PAT_VAR }}" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          https://api.github.com/repos/cuongnt02/portfolio/actions/variables/FRONTEND_DIST_ID \
          -d '{"name":"FRONTEND_DIST_ID","value":"${{ github.event.client_payload.frontend_run_id }}"}'

      # Always checkout backend
      - name: Checkout backend repo
        uses: actions/checkout@v4
        with:
          repository: cuongnt02/portfolio-server
          ref: ${{ vars.BACKEND_VERSION }}
          path: portfolio-server

      # Only fetch frontend dist if frontend release
      - name: Download frontend dist
        if: github.event.action == 'frontend-release'
        uses: actions/download-artifact@v4
        with:
          name: frontend-dist
          github-token: ${{ secrets.PAT }}
          repository: cuongnt02/portfolio-client
          run-id: ${{ github.event.client_payload.frontend_run_id }}
          path: portfolio-server/dist-frontend/

      - name: Download latest frontend dist
        if: github.event.action == 'backend-release'
        uses: actions/download-artifact@v4
        with:
          name: frontend-dist
          github-token: ${{ secrets.PAT }}
          repository: cuongnt02/portfolio-client
          run-id: ${{ vars.FRONTEND_DIST_ID }}
          path: portfolio-server/dist-frontend/


      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.VPS_SSH_KEY }}" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          ssh-keyscan -H ${{ secrets.PORTFOLIO_VPS_HOST }} >> ~/.ssh/known_hosts

      - name: Setup SSH passphrase
        env:
          SSH_PASSPHRASE: ${{ secrets.VPS_SSH_PASSPHRASE }}
          SSH_PRIVATE_KEY: ${{ secrets.VPS_SSH_KEY }}
        run: |
          ssh-agent -a $SSH_AUTH_SOCK > /dev/null
          echo 'echo $SSH_PASSPHRASE' > ~/.ssh_askpass && chmod +x ~/.ssh_askpass
          echo "$SSH_PRIVATE_KEY" | tr -d '\r' | DISPLAY=None SSH_ASKPASS=~/.ssh_askpass ssh-add - >/dev/null

      - name: Run build + deploy
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
          PORTFOLIO_VPS_HOST: ${{ secrets.PORTFOLIO_VPS_HOST }}
          PORTFOLIO_VPS_USER: ${{ secrets.PORTFOLIO_VPS_USER }}
          RELEASE_VERSION: ${{ vars.FRONTEND_VERSION }}-${{ vars.BACKEND_VERSION }}
          GITHUB_EVENT_TYPE: ${{ github.event.action }}
          ANSIBLE_BECOME_PASS: ${{ secrets.ANSIBLE_BECOME_PASS }}
          APP_PORT: ${{ secrets.APP_PORT }}
        run: |
          ansible-playbook build.yml -v
          ansible-playbook -i $PORTFOLIO_VPS_HOST, --user=$PORTFOLIO_VPS_USER --key-file=~/.ssh/id_ed25519 -e ansible_become_pass=$ANSIBLE_BECOME_PASS  -e release_version=$RELEASE_VERSION -e app_port=$APP_PORT deploy.yml -v
